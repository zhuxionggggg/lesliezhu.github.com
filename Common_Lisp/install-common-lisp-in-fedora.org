*** Fedora 15环境下安装Common Lisp(转载)
  
需要用到的软件：

   - *sbcl* ，比较流行的一种common lisp实现；
   - *emacs* ，用作开发环境，虽然比较复杂，但是比原来的命令行好用多了；
   - *slime* ，emas下的一个交互式lisp开发环境；
   - *quicklisp* ，common lisp包管理系统。
     
先用yum安装emacs和sbcl。
  
然后按如下步骤安装quicklisp。

下载quicklisp安装脚本：
    #+begin_example
    wget http://beta.quicklisp.org/quicklisp.lisp
    #+end_example

启动sbcl：
   #+begin_example
   sbcl --load quicklisp.lisp   
   #+end_example

安装quicklisp：
   #+begin_example
   (quicklisp-quickstart:install)   
   #+end_example
  
  添加quicklisp到启动文件，以后启动sbcl会自动加载quicklisp
   #+begin_example
   (ql:add-to-init-file)   
   #+end_example
  
  将会添加下列代码到~/.sbclrc文件中:
   #+begin_src lisp
   ;;;I will append the following lines to #P"/home/zhuchunlite/.sbclrc":
   ;;; The following lines added by ql:add-to-init-file:
   #-quicklisp
   (let ((quicklisp-init (merge-pathnames "quicklisp/setup.lisp"
                      (user-homedir-pathname))))
   (when (probe-file quicklisp-init)
     (load quicklisp-init)))
   #+end_src
  
  用quicklisp安装slime
   #+begin_example
   (ql:quickload "quicklisp-slime-helper")   
   #+end_example
  
   安装脚本执行完之后会给出一段elisp代码，按照说明把代码加入.emacs文件。
   
   代码示例：
   #+begin_example
   (load (expand-file-name "~/quicklisp/slime-helper.el"))
   ;; Replace "sbcl" with the path to your implementation
   (setq inferior-lisp-program "sbcl")
   ;;改为==>
   (setq inferior-lisp-program "/usr/bin/sbcl --noinform")
   #+end_example
   
   启动emacs，M-x slime启动slime，进入交互式cl编程环境，大功告成！如果还嫌麻烦，直接用Lispbox。
   
   Slime模式一些按键：
   #+begin_example
   REPL下的快捷键
   M-n/M-p　　向下/向上查找输入历史
   编辑文件时的快捷键
   C-x C-e　　                 对光标之前的表达式进行求值
   C-x C-r　　                 对一个区域进行求值
   C-c C-c　　                 编译光标所在的整个form　　　　　
   M-x slime-compile-region　　编译一个区域
   C-c C-k　　                 编译并装载(load)当前buffer中的源文件
　 C-c M-k　　                 编译但是不装载当前文件
 　C-c C-l　　                 加载当前文件　　　　　　
 　M-.　　                     查找当前光标下符号的定义
　 C-x 4 .　　                 在另一个buffer中打开光标下符号的定义(注意最后一个是句号键)
   C-c C-d d　　               在一个新的buffer中描述当前光标下的符号
　 C-c C-d h　　               在Common Lisp Hyperspec中查找当前光标下的符号
　 C-c C-d ~　　               在Common Lisp Hyperspec中查找某个特定的format控制字符
　 C-c C-w C-h　　             列出所有与交叉引用相关的快捷键绑定(都是以C-c C-w开头)
   #+end_example
   
   执行Profile
   #+begin_example
   M-x slime-toggle-profile-fdefinition
　 M-x slime-profile-package
　 M-x slime-profile-report
   #+end_example
   
   Source:http://life-sucks.net/wp/2011/10/25/fedora15%E4%B8%8B%E5%AE%89%E8%A3%85common-lisp%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/
